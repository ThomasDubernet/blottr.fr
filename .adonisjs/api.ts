// @ts-nocheck
/* eslint-disable */
// --------------------------------------------------
// This file is auto-generated by Tuyau. Do not edit manually !
// --------------------------------------------------

import type { MakeTuyauRequest, MakeTuyauResponse } from '@tuyau/utils/types'
import type { InferInput } from '@vinejs/vine/types'

type InscriptionPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['registerValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['register'], true>
}
type ConnexionPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/auth.ts')['loginValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['login'], true>
}
type DeconnexionPost = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/auth_controller.ts').default['logout'], false>
}
type ApiContactinquiriesPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/contact_inquiry.ts')['createContactInquiryValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/contact_inquiries_controller.ts').default['store'], true>
}
type ApiContactinquiriesQuickPost = {
  request: MakeTuyauRequest<InferInput<typeof import('../app/validators/contact_inquiry.ts')['createQuickInquiryValidator']>>
  response: MakeTuyauResponse<import('../app/controllers/contact_inquiries_controller.ts').default['storeQuick'], true>
}
type ApiContactinquiriesIdGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/contact_inquiries_controller.ts').default['show'], false>
}
type ApiHealthContactinquiriesGetHead = {
  request: unknown
  response: MakeTuyauResponse<import('../app/controllers/contact_inquiries_controller.ts').default['health'], false>
}
export interface ApiDefinition {
  'inscription': {
    '$url': {
    };
    '$post': InscriptionPost;
  };
  'connexion': {
    '$url': {
    };
    '$post': ConnexionPost;
  };
  'deconnexion': {
    '$url': {
    };
    '$post': DeconnexionPost;
  };
  'api': {
    'contact-inquiries': {
      '$url': {
      };
      '$post': ApiContactinquiriesPost;
      'quick': {
        '$url': {
        };
        '$post': ApiContactinquiriesQuickPost;
      };
      ':id': {
        '$url': {
        };
        '$get': ApiContactinquiriesIdGetHead;
        '$head': ApiContactinquiriesIdGetHead;
      };
    };
    'health': {
      'contact-inquiries': {
        '$url': {
        };
        '$get': ApiHealthContactinquiriesGetHead;
        '$head': ApiHealthContactinquiriesGetHead;
      };
    };
  };
}
const routes = [
  {
    params: [],
    name: 'accueil',
    path: '/',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
  {
    params: [],
    name: 'inscription',
    path: '/inscription',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
  {
    params: [],
    name: 'connexion',
    path: '/connexion',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
  {
    params: [],
    name: 'auth.register',
    path: '/inscription',
    method: ["POST"],
    types: {} as InscriptionPost,
  },
  {
    params: [],
    name: 'auth.login',
    path: '/connexion',
    method: ["POST"],
    types: {} as ConnexionPost,
  },
  {
    params: [],
    name: 'auth.logout',
    path: '/deconnexion',
    method: ["POST"],
    types: {} as DeconnexionPost,
  },
  {
    params: [],
    name: 'api.contact-inquiries.store',
    path: '/api/contact-inquiries',
    method: ["POST"],
    types: {} as ApiContactinquiriesPost,
  },
  {
    params: [],
    name: 'api.contact-inquiries.quick',
    path: '/api/contact-inquiries/quick',
    method: ["POST"],
    types: {} as ApiContactinquiriesQuickPost,
  },
  {
    params: ["id"],
    name: 'api.contact-inquiries.show',
    path: '/api/contact-inquiries/:id',
    method: ["GET","HEAD"],
    types: {} as ApiContactinquiriesIdGetHead,
  },
  {
    params: [],
    name: 'api.health.contact-inquiries',
    path: '/api/health/contact-inquiries',
    method: ["GET","HEAD"],
    types: {} as ApiHealthContactinquiriesGetHead,
  },
  {
    params: ["slug"],
    name: 'artistes.show',
    path: '/artistes/:slug',
    method: ["GET","HEAD"],
    types: {} as unknown,
  },
] as const;
export const api = {
  routes,
  definition: {} as ApiDefinition
}
declare module '@tuyau/inertia/types' {
  type InertiaApi = typeof api
  export interface Api extends InertiaApi {}
}
